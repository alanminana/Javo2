@model Javo2.ViewModels.Operaciones.Proveedores.ProveedoresViewModel

@{
    var isEdit = Model.ProveedorID > 0;
    ViewBag.Title = isEdit ? "Editar Proveedor" : "Crear Proveedor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mb-4">@ViewBag.Title</h2>

<div class="card p-4">
    <form asp-action="@(isEdit ? "Edit" : "Create")" method="post">
        @Html.HiddenFor(m => m.ProveedorID)
        @await Html.PartialAsync("_ProveedoresForm", Model)

        <div class="mt-3">
            <button type="submit" class="btn btn-primary me-2">
                <i class="bi bi-save me-2"></i> @(isEdit ? "Actualizar" : "Crear")
            </button>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left me-2"></i> Volver al Listado
            </a>
        </div>
    </form>
</div>

@section Scripts {
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        console.log("Script cargado y listo");

        $(function () {
            var assignedProducts = [];

            // Initialize assigned products from the model
        @foreach (var productID in Model.ProductosAsignados)
        {
            <text>
                            assignedProducts.push(@productID);
            </text>
        }

                $('#productSearch').autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '@Url.Action("SearchProducts", "Proveedores")',
                            data: { term: request.term },
                            success: function (data) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.label,
                                        value: item.value
                                    };
                                }));
                            }
                        });
                    },
                    select: function (event, ui) {
                        event.preventDefault();
                        var productName = ui.item.label;
                        var productID = ui.item.value;

                        if (!assignedProducts.includes(productID)) {
                            assignedProducts.push(productID);
                            $('#assignedProducts').append(
                                '<li class="list-group-item d-flex justify-content-between align-items-center" data-id="' + productID + '">' +
                                productName +
                                ' <button type="button" class="btn btn-link btn-sm remove-product">Eliminar</button>' +
                                '<input type="hidden" name="ProductosAsignados" value="' + productID + '" />' +
                                '</li>'
                            );
                        }

                        $(this).val('');
                        return false;
                    }
                });

            // Remove product from assigned list
            $('#assignedProducts').on('click', '.remove-product', function () {
                var li = $(this).closest('li');
                var productID = li.data('id');
                assignedProducts = assignedProducts.filter(function (id) {
                    return id != productID;
                });
                li.remove();
            });
        });
    </script>
}

<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
