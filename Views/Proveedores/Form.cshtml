@model Javo2.ViewModels.Operaciones.Proveedores.ProveedoresViewModel
@{
    var isEdit = Model.ProveedorID > 0;
    ViewBag.Title = isEdit ? "Editar Proveedor" : "Crear Proveedor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="container-fluid py-3">
    <div class="row justify-content-center">
        <div class="col-12 col-md-10 col-lg-8">
            <div class="card shadow-sm">
                <div class="card-header bg-dark text-light">
                    <h2 class="h5 mb-0">@ViewBag.Title</h2>
                </div>
                <div class="card-body">
                    <form asp-action="@(isEdit ? "Edit" : "Create")" method="post" id="proveedorForm" novalidate>
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="ProveedorID" />

                        @await Html.PartialAsync("_ProveedoresForm", Model)

                        <div class="d-flex justify-content-end mt-4">
                            <button type="submit" class="btn btn-primary me-2">
                                <i class="bi bi-save me-1" aria-hidden="true"></i>
                                <span>@(isEdit ? "Actualizar" : "Crear")</span>
                            </button>
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left me-1" aria-hidden="true"></i>
                                <span>Volver</span>
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script defer src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script defer>
        (function($) {
            $(function() {
                var assigned = [];
                $('#assignedProducts li').each(function() {
                    assigned.push($(this).data('id'));
                });
                $('#productSearch').autocomplete({
                    source: function(req, resp) {
                        $.getJSON('@Url.Action("SearchProducts", "Proveedores")', { term: req.term })
                         .done(resp).fail(function() { alert('Error'); });
                    },
                    select: function(e, ui) {
                        e.preventDefault();
                        var id = ui.item.value, name=ui.item.label;
                        if (!assigned.includes(id)) {
                            assigned.push(id);
                            $('#assignedProducts').append(
                                `<li class="list-group-item d-flex justify-content-between align-items-center" data-id="${id}">`+
                                `${name} <button type="button" class="btn btn-link btn-sm remove-product">Eliminar</button>`+
                                `<input type="hidden" name="ProductosAsignados" value="${id}" />`+
                                `</li>`);
                        }
                        $(this).val(''); return false;
                    }
                });
                $('#assignedProducts').on('click', '.remove-product', function() {
                    var li = $(this).closest('li'), id=li.data('id');
                    assigned = assigned.filter(x=>x!=id); li.remove();
                });
            });
        })(jQuery);
    </script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
}