@model IEnumerable<Javo2.ViewModels.Operaciones.Proveedores.ProveedoresViewModel>

@{
    ViewBag.Title = "Proveedores";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="container-fluid py-3">
    <!-- Encabezado sin acción -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h2 mb-0">@ViewBag.Title</h1>
    </div>

    <!-- Filtro de Proveedores -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form id="filterForm" class="row g-3 align-items-end">
                <div class="col-md-4">
                    <label for="filterField" class="form-label">Campo</label>
                    <select id="filterField" class="form-select">
                        <option value="nombre">Nombre</option>
                        <option value="producto">Producto</option>
                        <option value="marca">Marca</option>
                    </select>
                </div>
                <div class="col-md-6">
                    <label for="filterValue" class="form-label">Valor</label>
                    <input type="text" id="filterValue" class="form-control" placeholder="Buscar..." />
                </div>
                <div class="col-md-2 d-grid">
                    <button type="button" id="applyFilter" class="btn btn-primary">
                        <i class="bi bi-search me-1" aria-hidden="true"></i>
                        <span>Buscar</span>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Tabla de Proveedores con acción integrada -->
    <div class="card shadow-sm">
        <div class="card-header bg-dark text-light d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Listado de Proveedores</h5>
            <a asp-action="Create" class="btn btn-success btn-sm">
                <i class="bi bi-plus-circle me-1" aria-hidden="true"></i>
                <span>Agregar Proveedor</span>
            </a>
        </div>
        <a asp-action="Compras" class="btn btn-primary ms-2">
            <i class="bi bi-cart me-1"></i> Gestionar Compras
        </a>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover table-dark mb-0" aria-label="Listado de Proveedores">
                    <thead class="bg-secondary text-light">
                        <tr>
                            <th scope="col">Nombre</th>
                            <th scope="col">Teléfono</th>
                            <th scope="col">Email</th>
                            <th scope="col">Productos Asignados</th>
                            <th scope="col" class="text-center">Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="proveedoresTableBody">
                        @await Html.PartialAsync("_ProveedoresTable", Model)
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</section>
@foreach (var proveedor in Model)
{
    <tr>
        <td scope="row">@proveedor.Nombre</td>
        <td>@proveedor.Telefono</td>
        <td>@proveedor.Email</td>
        <td>
            @if (proveedor.ProductosAsignadosNombres?.Any() == true)
            {
                <ul class="list-unstyled mb-0">
                    @for (int i = 0; i < proveedor.ProductosAsignadosNombres.Count; i++)
                    {
                        var name = proveedor.ProductosAsignadosNombres[i];
                        var stock = proveedor.ProductosAsignadosStocks.ElementAtOrDefault(i);
                        <li>@name (Stock: @stock)</li>
                    }
                </ul>
            }
            else
            {
                <span class="text-muted">Sin productos</span>
            }
        </td>
      
    </tr>
    <td class="text-center">
        <div class="btn-group" role="group" aria-label="Acciones para @proveedor.Nombre">
            <a asp-action="Edit" asp-route-id="@proveedor.ProveedorID"
               class="btn btn-sm btn-outline-warning" title="Editar">
                <i class="bi bi-pencil-square" aria-hidden="true"></i>
            </a>
            <a asp-action="Details" asp-route-id="@proveedor.ProveedorID"
               class="btn btn-sm btn-outline-info" title="Detalles">
                <i class="bi bi-eye" aria-hidden="true"></i>
            </a>
            <a asp-action="CrearCompra" asp-route-proveedorId="@proveedor.ProveedorID"
               class="btn btn-sm btn-outline-primary" title="Crear compra">
                <i class="bi bi-cart-plus" aria-hidden="true"></i>
            </a>
            <form asp-action="Delete" asp-route-id="@proveedor.ProveedorID" method="post" class="d-inline" onsubmit="return confirm('¿Eliminar @proveedor.Nombre?');">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-sm btn-outline-danger" title="Eliminar">
                    <i class="bi bi-trash" aria-hidden="true"></i>
                </button>
            </form>
        </div>
    </td>
}
@section Scripts {
    <script defer>
        (function($) {
            $(function() {
                var filters = {};
                function applyFilters() {
                    $.get('@Url.Action("Filter", "Proveedores")', filters)
                     .done(function(html) {
                         $('#proveedoresTableBody').html(html);
                     })
                     .fail(function() { alert('Error al aplicar filtros'); });
                }
                $('#applyFilter').on('click', function() {
                    filters = {
                        filterField: $('#filterField').val(),
                        filterValue: $('#filterValue').val()
                    };
                    applyFilters();
                });
                $('#filterValue').on('keypress', function(e) {
                    if (e.which === 13) { $('#applyFilter').click(); return false; }
                });
            });
        })(jQuery);
    </script>
}
