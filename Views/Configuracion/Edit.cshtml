@model Javo2.Models.ConfiguracionSistema
@{
    ViewBag.Title = "Editar Configuración";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string GetNombreAmigable(string clave)
    {
        return clave switch
        {
            "PorcentajeGananciaPLista" => "Porcentaje Ganancia Precio Lista",
            "PorcentajeGananciaPContado" => "Porcentaje Ganancia Precio Contado",
            "LimiteCreditoDefault" => "Límite de Crédito Predeterminado",
            "DiasVencimientoFactura" => "Días para Vencimiento de Facturas",
            _ => clave.Replace("Porcentaje", "% ").Replace("Default", "Predeterminado")
        };
    }

    // Comprueba si el usuario tiene permiso de edición
    bool canEdit = User.HasPermission("configuracion.editar");
}

<section class="container-fluid py-3">
    <div class="card shadow-sm bg-dark text-light">
        <div class="card-header">
            <h2 class="h5 mb-0">@ViewBag.Title</h2>
        </div>
        <div class="card-body">
            <form asp-action="Edit" method="post">
                <input type="hidden" asp-for="ConfiguracionID" />
                <input type="hidden" asp-for="Modulo" />
                <input type="hidden" asp-for="Clave" />
                <input type="hidden" asp-for="TipoDato" />

                <div class="row mb-3">
                    <div class="col-md-12">
                        <h4>@GetNombreAmigable(Model.Clave)</h4>
                        <p class="text-muted">@Model.Descripcion</p>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="Valor" class="form-label">Valor</label>
                        @if (Model.TipoDato == "decimal" || Model.TipoDato == "int")
                        {
                            if (Model.Clave.Contains("Porcentaje"))
                            {
                                <div class="input-group">
                                    <input asp-for="Valor" class="form-control bg-dark text-light" @(canEdit ? "" : "readonly") />
                                    <span class="input-group-text">%</span>
                                </div>
                            }
                            else
                            {
                                <input asp-for="Valor" class="form-control bg-dark text-light" @(canEdit ? "" : "readonly") />
                            }
                        }
                        else if (Model.TipoDato == "bool")
                        {
                            <div class="form-check form-switch">
                                <input class="form-check-input"
                                       type="checkbox"
                                       asp-for="Valor"
                                @(Model.Valor == "true" ? "checked" : "")
                                @(canEdit ? "" : "disabled") />
                                <label class="form-check-label" for="Valor">Activar</label>
                            </div>
                        }
                        else
                        {
                            <input asp-for="Valor" class="form-control bg-dark text-light" @(canEdit ? "" : "readonly") />
                        }
                        <span asp-validation-for="Valor" class="text-danger"></span>
                    </div>
                </div>

                <div class="d-flex justify-content-end">
                    <a asp-action="Index" asp-route-modulo="@Model.Modulo" class="btn btn-outline-secondary me-2">
                        <i class="bi bi-arrow-left me-1"></i>Volver
                    </a>
                    @* Solo mostrar el botón Guardar si tiene permiso *@
                    @if (canEdit)
                    {
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-save me-1"></i>Guardar
                        </button>
                    }
                </div>
            </form>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        // Validación según el tipo de dato
        $(function() {
            const tipoDato = '@Model.TipoDato';
            const valorInput = $('#Valor');

            valorInput.on('input', function() {
                let isValid = true;
                const valor = $(this).val();

                if (tipoDato === 'int') {
                    isValid = /^\d+$/.test(valor);
                } else if (tipoDato === 'decimal') {
                    isValid = /^\d+(\.\d+)?$/.test(valor);
                }

                if (isValid) {
                    $(this).removeClass('is-invalid').addClass('is-valid');
                } else {
                    $(this).removeClass('is-valid').addClass('is-invalid');
                }
            });
        });
    </script>
}
