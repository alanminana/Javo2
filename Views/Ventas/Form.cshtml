@model Javo2.ViewModels.Operaciones.Ventas.VentaFormViewModel

@{
    ViewData["Title"] = Model.VentaID == 0 ? "Crear Venta" : "Editar Venta";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mb-4">@ViewData["Title"]</h2>

<div class="card p-4">
    <form asp-action="@(Model.VentaID == 0 ? "Create" : "Edit")" method="post" id="ventaForm">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (Model.VentaID != 0)
        {
        <input type="hidden" asp-for="VentaID" />
        }

        <!-- Datos de la Venta -->
        <fieldset class="mb-4">
            <legend>Datos de la Venta</legend>
            <div class="row g-3">
                <div class="col-md-6">
                    <label asp-for="FechaVenta" class="form-label">Fecha</label>
                    <input asp-for="FechaVenta" type="date" class="form-control" />
                    <span asp-validation-for="FechaVenta" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="NumeroFactura" class="form-label">Factura</label>
                    <input asp-for="NumeroFactura" class="form-control" readonly />
                    <span asp-validation-for="NumeroFactura" class="text-danger"></span>
                </div>
            </div>
        </fieldset>

        <!-- Datos del Cliente -->
        <fieldset class="mb-4">
            <legend>Datos del Cliente</legend>
            <div class="row g-3">
                <div class="col-md-4">
                    <label for="DniCliente" class="form-label">DNI del Cliente</label>
                    <div class="input-group">
                        <input type="number" id="DniCliente" class="form-control" placeholder="Ingrese DNI" />
                        <button type="button" id="buscarCliente" class="btn btn-primary">
                            <i class="bi bi-search"></i> Buscar
                        </button>
                    </div>
                </div>
                <div class="col-md-8">
                    <label asp-for="NombreCliente" class="form-label">Nombre / Razón Social</label>
                    <input asp-for="NombreCliente" class="form-control" readonly />
                    <span asp-validation-for="NombreCliente" class="text-danger"></span>
                </div>
            </div>
            <div class="row g-3 mt-3">
                <div class="col-md-4">
                    <label asp-for="TelefonoCliente" class="form-label">Teléfono</label>
                    <input asp-for="TelefonoCliente" class="form-control" readonly />
                </div>
                <div class="col-md-4">
                    <label asp-for="DomicilioCliente" class="form-label">Domicilio</label>
                    <input asp-for="DomicilioCliente" class="form-control" readonly />
                </div>
                <div class="col-md-4">
                    <label asp-for="LocalidadCliente" class="form-label">Localidad</label>
                    <input asp-for="LocalidadCliente" class="form-control" readonly />
                </div>
                <div class="col-md-4">
                    <label asp-for="CelularCliente" class="form-label">Celular</label>
                    <input asp-for="CelularCliente" class="form-control" readonly />
                </div>
                <div class="col-md-4">
                    <label asp-for="LimiteCreditoCliente" class="form-label">Límite Crédito</label>
                    <input asp-for="LimiteCreditoCliente" class="form-control" readonly />
                </div>
                <div class="col-md-4">
                    <label asp-for="SaldoCliente" class="form-label">Saldo</label>
                    <input asp-for="SaldoCliente" class="form-control" readonly />
                </div>
                <div class="col-md-4">
                    <label asp-for="SaldoDisponibleCliente" class="form-label">Saldo Disponible</label>
                    <input asp-for="SaldoDisponibleCliente" class="form-control" readonly />
                </div>
            </div>
        </fieldset>

        <!-- Forma de Pago -->
        <fieldset class="mb-4">
            <legend>Forma de Pago</legend>
            <div class="row g-3">
                <div class="col-md-6">
                    <label asp-for="FormaPagoID" class="form-label">Forma de Pago</label>
                    <select asp-for="FormaPagoID" class="form-select" asp-items="Model.FormasPago" id="FormaPagoID">
                        <option value="">-- Seleccione Forma de Pago --</option>
                    </select>
                    <span asp-validation-for="FormaPagoID" class="text-danger"></span>
                </div>
                <!-- Banco -->
                <div id="bancoContainer" class="col-md-6 d-none">
                    <label asp-for="BancoID" class="form-label">Banco</label>
                    <select asp-for="BancoID" class="form-select" asp-items="Model.Bancos" id="BancoID">
                        <option value="">-- Seleccione Banco --</option>
                    </select>
                    <span asp-validation-for="BancoID" class="text-danger"></span>
                </div>
                <!-- Tarjeta -->
                <div id="tipoTarjetaContainer" class="col-md-6 d-none">
                    <label asp-for="TipoTarjeta" class="form-label">Tipo de Tarjeta</label>
                    <select asp-for="TipoTarjeta" class="form-select" asp-items="Model.TipoTarjetaOptions" id="TipoTarjeta">
                        <option value="">-- Seleccione Tipo de Tarjeta --</option>
                    </select>
                    <span asp-validation-for="TipoTarjeta" class="text-danger"></span>
                </div>
                <div id="cuotasContainer" class="col-md-6 d-none">
                    <label asp-for="Cuotas" class="form-label">Cuotas</label>
                    <select asp-for="Cuotas" class="form-select" asp-items="Model.CuotasOptions" id="Cuotas">
                        <option value="">-- Seleccione Cuotas --</option>
                    </select>
                    <span asp-validation-for="Cuotas" class="text-danger"></span>
                </div>
                <!-- Pago Virtual -->
                <div id="entidadElectronicaContainer" class="col-md-6 d-none">
                    <label asp-for="EntidadElectronica" class="form-label">Entidad Electrónica</label>
                    <select asp-for="EntidadElectronica" class="form-select" asp-items="Model.EntidadesElectronicas" id="EntidadElectronica">
                        <option value="">-- Seleccione Entidad Electrónica --</option>
                    </select>
                    <span asp-validation-for="EntidadElectronica" class="text-danger"></span>
                </div>
                <!-- Crédito Personal -->
                <div id="planFinanciamientoContainer" class="col-md-6 d-none">
                    <label asp-for="PlanFinanciamiento" class="form-label">Plan de Financiamiento</label>
                    <select asp-for="PlanFinanciamiento" class="form-select" asp-items="Model.PlanesFinanciamiento" id="PlanFinanciamiento">
                        <option value="">-- Seleccione Plan de Financiamiento --</option>
                    </select>
                    <span asp-validation-for="PlanFinanciamiento" class="text-danger"></span>
                </div>
            </div>
        </fieldset>

        <!-- Anticipo / Cheques -->
        <fieldset class="mb-4">
            <legend>Anticipo</legend>
            <div class="row g-3">
                <div class="col-md-3">
                    <label asp-for="AdelantoDinero" class="form-label">Adelanto</label>
                    <input asp-for="AdelantoDinero" type="number" class="form-control" min="0" step="0.01" />
                    <span asp-validation-for="AdelantoDinero" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label asp-for="DineroContado" class="form-label">Dinero Contado</label>
                    <input asp-for="DineroContado" type="number" class="form-control" min="0" step="0.01" />
                    <span asp-validation-for="DineroContado" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label asp-for="MontoCheque" class="form-label">Monto Cheque</label>
                    <input asp-for="MontoCheque" type="number" class="form-control" min="0" step="0.01" />
                    <span asp-validation-for="MontoCheque" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label asp-for="NumeroCheque" class="form-label">N° Cheque</label>
                    <input asp-for="NumeroCheque" class="form-control" />
                    <span asp-validation-for="NumeroCheque" class="text-danger"></span>
                </div>
            </div>
        </fieldset>

        <!-- Crédito Personal -->
        <fieldset class="mb-4">
            <legend>Crédito Personal</legend>
            <div class="row g-3">
                <div class="col-md-6">
                    <label asp-for="Condiciones" class="form-label">Condiciones</label>
                    <textarea asp-for="Condiciones" class="form-control" rows="3"></textarea>
                    <span asp-validation-for="Condiciones" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="Credito" class="form-label">Crédito</label>
                    <input asp-for="Credito" type="number" class="form-control" min="0" step="0.01" />
                    <span asp-validation-for="Credito" class="text-danger"></span>
                </div>
            </div>
        </fieldset>

        <!-- Agregar Producto -->
        <fieldset class="mb-4">
            <legend>Agregar Producto</legend>
            <div class="row g-3">
                <div class="col-md-4">
                    <label for="codigoProducto" class="form-label">Código del Producto</label>
                    <div class="input-group">
                        <input type="text" id="codigoProducto" class="form-control" placeholder="Ingrese código" />
                        <button type="button" class="btn btn-primary" id="buscarProducto">
                            <i class="bi bi-search"></i> Buscar
                        </button>
                    </div>
                </div>
                <div class="col-md-4">
                    <label for="nombreProducto" class="form-label">Nombre del Producto</label>
                    <div class="input-group">
                        <input type="text" id="nombreProducto" class="form-control" placeholder="Ingrese nombre" />
                        <button type="button" class="btn btn-primary" id="buscarProductoPorNombre">
                            <i class="bi bi-search"></i> Buscar
                        </button>
                    </div>
                </div>
                <div class="col-md-4">
                    <label for="rubroProducto" class="form-label">Rubro</label>
                    <div class="input-group">
                        <input type="text" id="rubroProducto" class="form-control" placeholder="Ingrese rubro" />
                        <button type="button" class="btn btn-primary" id="buscarProductoPorRubro">
                            <i class="bi bi-search"></i> Buscar
                        </button>
                    </div>
                </div>
            </div>
        </fieldset>

        <!-- Tabla de Productos -->
        <fieldset class="mb-4">
            <legend>Detalles del Presupuesto</legend>
            <div class="table-responsive">
                <table class="table table-striped table-bordered" id="productosTable">
                    <thead class="table-dark">
                        <tr>
                            <th>Código</th>
                            <th>Código Alfa</th>
                            <th>Detalle</th>
                            <th>Cantidad</th>
                            <th>Precio Unitario</th>
                            <th>Subtotal</th>
                            <th>Marca</th>
                            <th>Precio Lista</th>
                            <th>Precio Total</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.ProductosPresupuesto.Count; i++)
                        {
                            var producto = Model.ProductosPresupuesto[i];
                        <tr>
                            <td>
                                <input type="hidden" name="ProductosPresupuesto[@i].ProductoID" value="@producto.ProductoID" />
                                <input type="hidden" name="ProductosPresupuesto[@i].CodigoBarra" value="@producto.CodigoBarra" />
                                @producto.CodigoBarra
                            </td>
                            <td>
                                <input type="hidden" name="ProductosPresupuesto[@i].CodigoAlfa" value="@producto.CodigoAlfa" />
                                @producto.CodigoAlfa
                            </td>
                            <td>
                                <input type="hidden" name="ProductosPresupuesto[@i].NombreProducto" value="@producto.NombreProducto" />
                                @producto.NombreProducto
                            </td>
                            <td>
                                <input type="number" name="ProductosPresupuesto[@i].Cantidad" value="@producto.Cantidad"
                                       class="form-control cantidad" min="1" data-index="@i" />
                            </td>
                            <td>
                                <input type="hidden" name="ProductosPresupuesto[@i].PrecioUnitario" value="@producto.PrecioUnitario" />
                                <span class="precio-unitario">@producto.PrecioUnitario.ToString("C")</span>
                            </td>
                            <td>
                                <span class="subtotal">@(producto.Cantidad * producto.PrecioUnitario).ToString("C")</span>
                            </td>
                            <td>
                                <input type="hidden" name="ProductosPresupuesto[@i].Marca" value="@producto.Marca" />
                                @producto.Marca
                            </td>
                            <td>
                                <input type="hidden" name="ProductosPresupuesto[@i].PrecioLista" value="@producto.PrecioLista" />
                                @producto.PrecioLista.ToString("C")
                            </td>
                            <td>
                                <input type="hidden" name="ProductosPresupuesto[@i].PrecioTotal" value="@producto.PrecioTotal" />
                                <span class="precio-total">@producto.PrecioTotal.ToString("C")</span>
                            </td>
                            <td>
                                <button type="button" class="btn btn-danger btn-sm eliminar-producto">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
        </fieldset>

        <!-- Totales -->
        <div class="text-end mb-4">
            <h4 class="mb-0">
                Total de Productos: <span id="totalProductos">@Model.TotalProductos</span>
            </h4>
            <h4 class="mb-0">
                Precio Total: <span id="totalVenta">@Model.PrecioTotal.ToString("C")</span>
                <input type="hidden" asp-for="PrecioTotal" id="precioTotalHidden" />
            </h4>
        </div>

        <!-- Modal Seleccionar Productos -->
        <div class="modal fade" id="productosModal" tabindex="-1" aria-labelledby="productosModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="productosModalLabel">Seleccionar Producto</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                    </div>
                    <div class="modal-body">
                        <ul class="list-group" id="productosList">
                            <!-- Se llena dinámicamente -->
                        </ul>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Botones de Acción -->
        <div class="mb-4 text-end">
            <button type="submit" class="btn btn-primary me-2" name="Finalizar" value="false">
                <i class="bi bi-save me-1"></i> Guardar Borrador
            </button>
            <button type="submit" class="btn btn-success me-2" name="Finalizar" value="true">
                <i class="bi bi-cash-coin me-1"></i> Finalizar Venta
            </button>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left me-1"></i> Cancelar
            </a>
        </div>
    </form>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        $(document).ready(function () {
            // Inicialización del formulario
            function initializeForm() {
                updateFormaPagoVisibility();
                actualizarTotales();
            }

            // Control de visibilidad de campos según Forma de Pago
            function updateFormaPagoVisibility() {
                const formaPagoID = parseInt($("#FormaPagoID").val()) || 0;

                $("#bancoContainer, #tipoTarjetaContainer, #cuotasContainer, #entidadElectronicaContainer, #planFinanciamientoContainer")
                    .addClass("d-none");

                switch (formaPagoID) {
                    case 2: // Tarjeta de Crédito
                        $("#bancoContainer, #tipoTarjetaContainer, #cuotasContainer").removeClass("d-none");
                        break;
                    case 5: // Pago Virtual
                        $("#entidadElectronicaContainer").removeClass("d-none");
                        break;
                    case 6: // Crédito Personal
                        $("#planFinanciamientoContainer").removeClass("d-none");
                        break;
                }
            }

            // Buscar Cliente por DNI
            $("#buscarCliente").click(function (e) {
                e.preventDefault();
                const dni = $("#DniCliente").val().trim();

                if (!dni) {
                    alert("Ingrese un DNI válido.");
                    return;
                }

                $.ajax({
                    url: '@Url.Action("BuscarClientePorDNI", "Ventas")',
                    type: 'POST',
                    data: { dni: dni },
                    success: function (response) {
                        if (response.success) {
                            const data = response.data;
                            $("#NombreCliente").val(data.nombre);
                            $("#TelefonoCliente").val(data.telefono);
                            $("#DomicilioCliente").val(data.domicilio);
                            $("#LocalidadCliente").val(data.localidad);
                            $("#CelularCliente").val(data.celular);
                            $("#LimiteCreditoCliente").val(data.limiteCredito);
                            $("#SaldoCliente").val(data.saldo);
                            $("#SaldoDisponibleCliente").val(data.saldoDisponible);
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert("Error al buscar el cliente.");
                    }
                });
            });

            // Buscar Producto
            $("#buscarProducto").click(function (e) {
                e.preventDefault();
                const codigo = $("#codigoProducto").val().trim();

                if (!codigo) {
                    alert("Ingrese un código de producto válido.");
                    return;
                }

                $.ajax({
                    url: '@Url.Action("BuscarProducto", "Ventas")',
                    type: 'POST',
                    data: { codigoProducto: codigo },
                    success: function (response) {
                        if (response.success) {
                            agregarProductoATabla(response.data);
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert("Error al buscar el producto.");
                    }
                });
            });

            // Agregar producto a la tabla
            function agregarProductoATabla(producto) {
                const index = $("#productosTable tbody tr").length;

                const newRow = `
                    <tr>
                        <td>
                            <input type="hidden" name="ProductosPresupuesto[${index}].ProductoID" value="${producto.productoID}" />
                            <input type="hidden" name="ProductosPresupuesto[${index}].CodigoBarra" value="${producto.codigoBarra || ''}" />
                            ${producto.codigoBarra || ''}
                        </td>
                        <td>
                            <input type="hidden" name="ProductosPresupuesto[${index}].CodigoAlfa" value="${producto.codigoAlfa || ''}" />
                            ${producto.codigoAlfa || ''}
                        </td>
                        <td>
                            <input type="hidden" name="ProductosPresupuesto[${index}].NombreProducto" value="${producto.nombreProducto || ''}" />
                            ${producto.nombreProducto || ''}
                        </td>
                        <td>
                            <input type="number" name="ProductosPresupuesto[${index}].Cantidad" value="${producto.cantidad || 1}"
                                   class="form-control cantidad" min="1" data-index="${index}" />
                        </td>
                        <td>
                            <input type="hidden" name="ProductosPresupuesto[${index}].PrecioUnitario" value="${producto.precioUnitario}" />
                            <span class="precio-unitario">${formatCurrency(producto.precioUnitario)}</span>
                        </td>
                        <td>
                            <span class="subtotal">${formatCurrency((producto.cantidad || 1) * producto.precioUnitario)}</span>
                        </td>
                        <td>
                            <input type="hidden" name="ProductosPresupuesto[${index}].Marca" value="${producto.marca || ''}" />
                            ${producto.marca || ''}
                        </td>
                        <td>
                            <input type="hidden" name="ProductosPresupuesto[${index}].PrecioLista" value="${producto.precioLista}" />
                            ${formatCurrency(producto.precioLista)}
                        </td>
                        <td>
                            <input type="hidden" name="ProductosPresupuesto[${index}].PrecioTotal" value="${producto.precioTotal}" />
                            <span class="precio-total">${formatCurrency(producto.precioTotal)}</span>
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger btn-sm eliminar-producto">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;

                $("#productosTable tbody").append(newRow);
                actualizarTotales();
                $("#codigoProducto").val('');
            }

            // Actualizar totales
            function actualizarTotales() {
                let totalProductos = 0;
                let precioTotal = 0;

                $("#productosTable tbody tr").each(function () {
                    const cantidad = parseInt($(this).find(".cantidad").val()) || 0;
                    const precioUnitario = parseFloat($(this).find("input[name$='.PrecioUnitario']").val()) || 0;
                    const subtotal = cantidad * precioUnitario;

                    totalProductos += cantidad;
                    precioTotal += subtotal;

                    $(this).find(".subtotal").text(formatCurrency(subtotal));
                    $(this).find("input[name$='.PrecioTotal']").val(subtotal);
                    $(this).find(".precio-total").text(formatCurrency(subtotal));
                });

                $("#totalProductos").text(totalProductos);
                $("#totalVenta").text(formatCurrency(precioTotal));
                $("#precioTotalHidden").val(precioTotal);
            }

            // Formatear moneda
            function formatCurrency(value) {
                return new Intl.NumberFormat('es-AR', {
                    style: 'currency',
                    currency: 'ARS'
                }).format(value);
            }

            // Event Listeners
            $("#FormaPagoID").change(updateFormaPagoVisibility);

            $(document).on('change', '.cantidad', function () {
                actualizarTotales();
            });

            $(document).on('click', '.eliminar-producto', function () {
                $(this).closest('tr').remove();
                reindexarProductos();
                actualizarTotales();
            });

            // Reindexar productos
            function reindexarProductos() {
                $("#productosTable tbody tr").each(function (index) {
                    $(this).find("input").each(function () {
                        const name = $(this).attr("name");
                        if (name) {
                            const newName = name.replace(/\[\d+\]/, `[${index}]`);
                            $(this).attr("name", newName);
                        }
                    });
                });
            }

            // Inicializar
            initializeForm();
        });
    </script>
}