@model Javo2.ViewModels.Operaciones.Clientes.ClientesViewModel
@{
    ViewData["Title"] = "Detalles del Cliente";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="container-fluid py-3">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h2 mb-0">@ViewData["Title"]</h1>
        <div>
            <a asp-action="Edit" asp-route-id="@Model.ClienteID" class="btn btn-primary btn-sm">
                <i class="bi bi-pencil-square me-1"></i> Editar
            </a>
            <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
                <i class="bi bi-arrow-left me-1"></i> Volver
            </a>
        </div>
    </div>

    <div class="card shadow-sm bg-dark text-light">
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <h4>Datos Personales</h4>
                    <hr />
                    <dl class="row">
                        <dt class="col-sm-4">Nombre:</dt>
                        <dd class="col-sm-8">@Model.NombreCliente @Model.Apellido</dd>

                        <dt class="col-sm-4">DNI:</dt>
                        <dd class="col-sm-8">@Model.DNI</dd>

                        <dt class="col-sm-4">Email:</dt>
                        <dd class="col-sm-8">@Model.Email</dd>

                        <dt class="col-sm-4">Teléfono:</dt>
                        <dd class="col-sm-8">@Model.Telefono</dd>

                        <dt class="col-sm-4">Celular:</dt>
                        <dd class="col-sm-8">@Model.Celular</dd>

                        <dt class="col-sm-4">Estado:</dt>
                        <dd class="col-sm-8">
                            <span class="badge @(Model.Activo ? "bg-success" : "bg-danger")">
                                @(Model.Activo ? "Activo" : "Inactivo")
                            </span>
                        </dd>
                    </dl>
                </div>
                <div class="col-md-6">
                    <h4>Domicilio</h4>
                    <hr />
                    <dl class="row">
                        <dt class="col-sm-4">Dirección:</dt>
                        <dd class="col-sm-8">@Model.Calle @Model.NumeroCalle, Piso: @Model.NumeroPiso, Dpto: @Model.Dpto</dd>

                        <dt class="col-sm-4">Localidad:</dt>
                        <dd class="col-sm-8">@Model.Localidad</dd>

                        <dt class="col-sm-4">Código Postal:</dt>
                        <dd class="col-sm-8">@Model.CodigoPostal</dd>

                        <dt class="col-sm-4">Provincia:</dt>
                        <dd class="col-sm-8">@(Model.Provincias?.FirstOrDefault(p => p.Value == Model.ProvinciaID.ToString())?.Text ?? "No especificada")</dd>

                        <dt class="col-sm-4">Descripción:</dt>
                        <dd class="col-sm-8">@Model.DescripcionDomicilio</dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>

    @if (Model.AptoCredito)
    {
        <div class="card mt-3 bg-dark text-light">
            <div class="card-header">
                <h5 class="mb-0">Gestión de Crédito</h5>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-md-4">
                        <p><strong>Límite de Crédito:</strong> @Model.LimiteCreditoInicial.ToString("C")</p>
                    </div>
                    <div class="col-md-4">
                        <p><strong>Saldo:</strong> @Model.Saldo.ToString("C")</p>
                    </div>
                    <div class="col-md-4">
                        <p><strong>Saldo Disponible:</strong> @Model.SaldoDisponible.ToString("C")</p>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-4">
                        <p><strong>Vencimiento de Cuotas:</strong> @(Model.VencimientoCuotas.HasValue? Model.VencimientoCuotas.Value.ToString() : "No especificado")</p>
                    </div>
                    <div class="col-md-4">
                        <p><strong>Score de Crédito:</strong> @(string.IsNullOrEmpty(Model.ScoreCredito) ? "No especificado" : Model.ScoreCredito)</p>
                    </div>
                    <div class="col-md-4">
                        <p><strong>Clasificación:</strong> @Model.TextoClasificacionCredito</p>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-8">
                        <form asp-action="AjustarCredito" method="post" class="d-flex gap-2">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@Model.ClienteID" />
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input type="number" name="nuevoLimite" class="form-control bg-secondary text-light" value="@Model.LimiteCreditoInicial" min="0" step="0.01" />
                                <button type="submit" class="btn btn-primary">Ajustar Límite</button>
                            </div>
                        </form>
                    </div>

                    @if (Model.RequiereGarante && Model.GaranteID <= 0)
                    {
                        <div class="col-md-4 text-end">
                            <a asp-action="AsignarGarante" asp-route-id="@Model.ClienteID" class="btn btn-warning">
                                <i class="bi bi-person-plus me-1"></i> Asignar Garante
                            </a>
                        </div>
                    }
                </div>

                @if (Model.GaranteID > 0)
                {
                    <div class="alert alert-info mt-3">
                        <strong>Garante asignado:</strong> @Model.NombreGarante
                        <div class="mt-2">
                            <a asp-action="AsignarGarante" asp-route-id="@Model.ClienteID" class="btn btn-sm btn-outline-primary me-2">
                                <i class="bi bi-pencil"></i> Cambiar Garante
                            </a>
                            <a asp-action="VerGarante" asp-route-id="@Model.GaranteID" asp-route-clienteId="@Model.ClienteID" class="btn btn-sm btn-outline-info me-2">
                                <i class="bi bi-eye"></i> Ver Garante
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    }

    @if (Model.HistorialCompras != null && Model.HistorialCompras.Any())
    {
        <div class="card mt-3 bg-dark text-light">
            <div class="card-header">
                <h5 class="mb-0">Historial de Compras</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-dark table-striped">
                        <thead>
                            <tr>
                                <th>Fecha</th>
                                <th>Producto</th>
                                <th>Cantidad</th>
                                <th>Precio Unit.</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var compra in Model.HistorialCompras)
                            {
                                <tr>
                                    <td>@compra.FechaCompra</td>
                                    <td>@compra.Producto</td>
                                    <td>@compra.Cantidad</td>
                                    <td>@compra.PrecioUnitario.ToString("C")</td>
                                    <td>@compra.Total.ToString("C")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</section>

