@model Javo2.ViewModels.Authentication.UsuarioFormViewModel
@{
    ViewData["Title"] = Model.EsEdicion ? "Editar Usuario" : "Crear Usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="container-fluid py-3">
    <div class="card shadow-sm bg-dark text-light">
        <div class="card-header">
            <h2 class="h4 mb-0">@ViewData["Title"]</h2>
        </div>
        <div class="card-body">
            <form asp-action="@(Model.EsEdicion ? "Edit" : "Create")" method="post">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                @if (Model.EsEdicion)
                {
                    <input type="hidden" asp-for="Usuario.UsuarioID" />
                }

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="Usuario.NombreUsuario" class="form-label">Nombre de usuario</label>
                        <input asp-for="Usuario.NombreUsuario" class="form-control bg-dark text-light" />
                        <span asp-validation-for="Usuario.NombreUsuario" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="Usuario.Email" class="form-label">Email</label>
                        <input asp-for="Usuario.Email" class="form-control bg-dark text-light" />
                        <span asp-validation-for="Usuario.Email" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="Usuario.Nombre" class="form-label">Nombre</label>
                        <input asp-for="Usuario.Nombre" class="form-control bg-dark text-light" />
                        <span asp-validation-for="Usuario.Nombre" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="Usuario.Apellido" class="form-label">Apellido</label>
                        <input asp-for="Usuario.Apellido" class="form-control bg-dark text-light" />
                        <span asp-validation-for="Usuario.Apellido" class="text-danger"></span>
                    </div>
                </div>

                @if (!Model.EsEdicion)
                {
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label asp-for="Contraseña" class="form-label">Contraseña</label>
                            <input asp-for="Contraseña" class="form-control bg-dark text-light" type="password" />
                            <span asp-validation-for="Contraseña" class="text-danger"></span>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="ConfirmarContraseña" class="form-label">Confirmar contraseña</label>
                            <input asp-for="ConfirmarContraseña" class="form-control bg-dark text-light" type="password" />
                            <span asp-validation-for="ConfirmarContraseña" class="text-danger"></span>
                        </div>
                    </div>
                }
                else
                {
                    <!-- Edición - campos de contraseña opcionales -->
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label asp-for="Contraseña" class="form-label">Nueva Contraseña (opcional)</label>
                            <input asp-for="Contraseña" class="form-control bg-dark text-light" type="password" />
                            <small class="text-muted">Dejar en blanco para mantener la contraseña actual</small>
                            <span asp-validation-for="Contraseña" class="text-danger"></span>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="ConfirmarContraseña" class="form-label">Confirmar nueva contraseña</label>
                            <input asp-for="ConfirmarContraseña" class="form-control bg-dark text-light" type="password" />
                            <span asp-validation-for="ConfirmarContraseña" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-check mb-3">
                        <input asp-for="Usuario.Activo" class="form-check-input" />
                        <label asp-for="Usuario.Activo" class="form-check-label">Usuario activo</label>
                    </div>
                }

                <div class="mb-4">
                    <input type="hidden" asp-for="Usuario.CreadoPor" value="@User.Identity.Name" />
                    <label class="form-label">Roles</label>
                    <div class="card bg-secondary">
                        <div class="card-body">
                            @if (Model.RolesDisponibles != null && Model.RolesDisponibles.Any())
                            {
                                @foreach (var rol in Model.RolesDisponibles)
                                {
                                    <div class="form-check">
                                        <input type="checkbox"
                                               class="form-check-input"
                                               id="rol-@rol.Value"
                                               name="RolesSeleccionados"
                                               value="@rol.Value"
                                        @(Model.RolesSeleccionados != null && Model.RolesSeleccionados.Contains(int.Parse(rol.Value)) ? "checked" : "") />
                                        <label class="form-check-label" for="rol-@rol.Value">@rol.Text</label>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="alert alert-warning">
                                    <i class="bi bi-exclamation-triangle me-2"></i>No hay roles disponibles.
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-end gap-2">
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left me-1"></i> Volver
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save me-1"></i> Guardar
                    </button>
                </div>
            </form>
        </div>
    </div>
</section>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(function() {
            const form = $('form');
            const submitBtn = $('button[type="submit"]');

            // Debug del botón de submit
            submitBtn.on('click', function(e) {
                console.log('Botón submit clickeado');
                // Asegurar que el formulario se envíe
                setTimeout(function() {
                    // Si después de 100ms todavía estamos aquí, el formulario no se envió
                    console.log('El formulario no se ha enviado - forzando envío');
                    form.submit();
                }, 100);
            });

            // Interceptar validación
            $.validator.setDefaults({
                debug: false, // Cambiar a false para permitir envío
                success: "valid"
            });

            form.on('submit', function(e) {
                console.log('Enviando formulario...');

                // Si es modo edición, desactivar validación de contraseña si está vacía
                if ($('input[type="hidden"][name="EsEdicion"][value="True"]').length > 0) {
                    if ($('#Contraseña').val() === '') {
                        $('#Contraseña').rules('remove', 'required');
                        $('#ConfirmarContraseña').rules('remove', 'required');
                    }
                }

                // Ver si el form es válido según jQuery validation
                const isValid = form.valid();
                console.log('Form válido según jQuery validation:', isValid);

                // Loguear valores de campos
                const campos = {
                    NombreUsuario: $('#Usuario_NombreUsuario').val(),
                    Email: $('#Usuario_Email').val(),
                    Nombre: $('#Usuario_Nombre').val(),
                    Apellido: $('#Usuario_Apellido').val(),
                    Contraseña: $('#Contraseña').val(),
                    ConfirmarContraseña: $('#ConfirmarContraseña').val()
                };
                console.log('Valores de campos:', campos);

                // Loguear roles seleccionados
                const rolesSeleccionados = [];
                $('input[name="RolesSeleccionados"]:checked').each(function() {
                    rolesSeleccionados.push($(this).val());
                });
                console.log('Roles seleccionados:', rolesSeleccionados);

                // Si hay errores de validación, mostrarlos
                if (!isValid) {
                    console.log('Errores de validación:');
                    form.validate().showErrors();
                    const errors = form.validate().errorList;
                    console.table(errors);
                    return false; // Detener envío en caso de errores
                }

                // Permitir el envío si todo está correcto
                return true;
            });

            // Si es edición, quitar requerimiento de contraseña
            if ($('input[type="hidden"][name="EsEdicion"][value="True"]').length > 0) {
                console.log('Modo edición detectado - modificando validación');

                // Quitar required de contraseña si es modo edición
                if ($.validator && $.validator.unobtrusive) {
                    $('#Contraseña').removeAttr('data-val-required');
                    $('#ConfirmarContraseña').removeAttr('data-val-required');
                    $.validator.unobtrusive.parse(form);
                }
            }
        });
    </script>


}
