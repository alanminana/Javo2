@model IEnumerable<Javo2.ViewModels.Operaciones.Productos.ProductosViewModel>
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery Xsrf
@{
    ViewBag.Title = "Productos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="container-fluid py-3">
    <!-- Encabezado sin acción -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h2 mb-0">@ViewBag.Title</h1>
    </div>

    <!-- Resumen de Productos -->
    <div class="summary-cards mb-4" role="region" aria-labelledby="prodSummary">
        <h2 id="prodSummary" class="visually-hidden">Resumen de productos</h2>
        <div class="summary-card">
            <h5>Total Productos</h5>
            <p class="display-6">@Model.Count()</p>
        </div>
        <div class="summary-card">
            <h5>Stock Disponible</h5>
            <p class="display-6">@Model.Sum(p => p.CantidadDisponible)</p>
        </div>
        <div class="summary-card">
            <h5>Valor Inventario</h5>
            <p class="display-6">@Model.Sum(p => p.PCosto * p.CantidadDisponible).ToString("C")</p>
        </div>
    </div>

    <!-- Filtros de Productos -->
    <div class="card mb-4 shadow-sm bg-dark text-light p-3">
        <form id="filterForm" class="row g-3 align-items-end">
            <div class="col-md-4">
                <label for="filterType" class="form-label text-light">Filtrar por</label>
                <select id="filterType" class="form-select bg-secondary text-light">
                    <option value="Nombre">Nombre</option>
                    <option value="Codigo">Código</option>
                    <option value="Rubro">Rubro</option>
                    <option value="SubRubro">SubRubro</option>
                    <option value="Marca">Marca</option>
                </select>
            </div>
            <div class="col-md-6">
                <label for="filterValue" class="form-label text-light">Valor</label>
                <input type="text" id="filterValue" class="form-control bg-secondary text-light" placeholder="Escriba para filtrar..." />
            </div>
            <div class="col-md-2 d-grid">
                <button type="button" class="btn btn-outline-light" id="applyFilters">
                    <i class="bi bi-filter me-1"></i><span>Aplicar</span>
                </button>
            </div>
        </form>
    </div>

    <!-- Views/Productos/Index.cshtml (actualización de la sección de ajuste de precios) -->
    <div class="card mb-4 shadow-sm bg-dark text-light p-3">
        <div class="d-flex justify-content-between align-items-center mb-2">
            <h5 class="card-title mb-0"><i class="bi bi-cash-coin me-2"></i>Ajuste de Precios</h5>
            <a asp-controller="AjustePrecios" asp-action="Index" class="btn btn-sm btn-outline-light">
                <i class="bi bi-clock-history me-1"></i>Ver Historial
            </a>
        </div>
        <form class="row g-3 align-items-end">
            <div class="col-md-4">
                <label for="porcentaje" class="form-label text-light">Porcentaje</label>
                <div class="input-group">
                    <input type="number" id="porcentaje" class="form-control bg-secondary text-light" step="0.01" placeholder="Ej: 10" />
                    <span class="input-group-text bg-secondary text-light">%</span>
                </div>
            </div>
            <div class="col-md-5">
                <label class="form-label text-light d-block">Tipo</label>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="ajusteTipo" id="radioAumento" value="true" checked />
                    <label class="form-check-label text-success" for="radioAumento">
                        <i class="bi bi-arrow-up-circle me-1"></i>Aumento
                    </label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="ajusteTipo" id="radioDisminuir" value="false" />
                    <label class="form-check-label text-danger" for="radioDisminuir">
                        <i class="bi bi-arrow-down-circle me-1"></i>Descuento
                    </label>
                </div>
            </div>
            <div class="col-md-3 d-flex gap-2">
                <button type="button" class="btn btn-success flex-grow-1" id="btnAdjustPrices">
                    <i class="bi bi-cash-coin me-1"></i>Aplicar
                </button>
                <a asp-controller="AjustePrecios" asp-action="Form" class="btn btn-outline-light" title="Ajuste Avanzado">
                    <i class="bi bi-gear-fill"></i>
                </a>
            </div>
        </form>
    </div>

    <!-- Tabla de Productos con acción -->
    <div class="card shadow-sm">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 class="card-title mb-0"><i class="bi bi-list-ul me-1"></i>Listado de Productos</h5>
                @if (User.HasPermission("productos.crear"))
                {
                    <a asp-action="Create" class="btn btn-success btn-sm">
                        <i class="bi bi-plus-circle me-1"></i>Crear Producto
                    </a>
                }
            </div>
            <div class="table-responsive">
                <table class="table table-hover table-dark table-striped mb-0" id="productosTable">
                    <thead class="bg-secondary text-light">
                        <tr>
                            <th width="50px"><i class="bi bi-check-square"></i></th>
                            <th>Nombre</th>
                            <th>Precio Costo</th>
                            <th>Precio Contado</th>
                            <th>Precio Lista</th>
                            <th>Stock</th>
                            <th class="text-center">Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="productosTableBody">
                        @await Html.PartialAsync("_ProductosTable", Model)
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Token Anti-Forgery -->
    <input type="hidden" id="__RequestVerificationToken" value="@Xsrf.GetAndStoreTokens(ViewContext.HttpContext).RequestToken" />
</section>

@section Scripts {
    <script defer>
        (function($) {
            $(function() {
                // Estilos de checkboxes
                $('.form-check-input').addClass('bg-secondary border-light');
                // Seleccionar todos
                $('#checkAll').change(function() {
                    $('input[name="ProductoIDs"]').prop('checked', this.checked).trigger('change');
                });
                // Resaltar filas
                $(document).on('change', 'input[name="ProductoIDs"]', function() {
                    $(this).closest('tr').toggleClass('table-primary', this.checked);
                });
                // Filtrado
                $('#applyFilters').click(function() {
                    var data = {};
                    data[$('#filterType').val()] = $('#filterValue').val();
                    $.get('@Url.Action("Filter", "Productos")', data)
                     .done(html => {
                         $('#productosTableBody').html(html);
                         $('.form-check-input').addClass('bg-secondary border-light');
                     })
                     .fail(() => alert('Error al filtrar'));
                });
                // Escape para reset
                $(document).keyup(e => {
                    if (e.key==='Escape') {
                        $('#filterType').val('Nombre');
                        $('#filterValue').val('');
                        $('#applyFilters').click();
                    }
                });
                // Ajuste de precios
                $('#btnAdjustPrices').click(function() {
                    var ids = $('input[name="ProductoIDs"]:checked').map((i,e)=>e.value).get();
                    if (!ids.length) { alert('Seleccione al menos un producto.'); return; }
                    var pct = parseFloat($('#porcentaje').val());
                    if (!(pct>0)) { alert('Ingrese un porcentaje válido mayor a cero.'); return; }
                    var isUp = $('input[name="ajusteTipo"]:checked').val()==='true';
                    if (!confirm(`¿Aplicar ${isUp?'aumento':'descuento'} de ${pct}% a ${ids.length} productos?`)) return;
                    $.ajax({
                        url: '@Url.Action("IncrementarPrecios", "Productos")',
                        type: 'POST',
                        data: { ProductoIDs: ids.join(','), porcentaje: pct, isAumento: isUp },
                        headers: { 'RequestVerificationToken': $('#__RequestVerificationToken').val() },
                        success: resp => { if (resp.success) location.reload(); else alert(resp.message); },
                        error: () => alert('Error al ajustar precios')
                    });
                });
            });
        })(jQuery);
    </script>
}