@model Javo2.ViewModels.Authentication.SecurityDashboardViewModel
@{
    ViewData["Title"] = "Cambiar Contraseña";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="container-fluid py-3">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm bg-dark text-light">
                <div class="card-header">
                    <h2 class="h4 mb-0"><i class="bi bi-lock-fill me-2"></i>@ViewData["Title"]</h2>
                </div>
                <div class="card-body">
                    <form asp-action="CambiarContraseña" method="post">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        <div class="mb-3">
                            <label asp-for="ContraseñaActual" class="form-label"></label>
                            <input asp-for="ContraseñaActual" class="form-control bg-dark text-light" />
                            <span asp-validation-for="ContraseñaActual" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ContraseñaNueva" class="form-label"></label>
                            <input asp-for="ContraseñaNueva" class="form-control bg-dark text-light" />
                            <span asp-validation-for="ContraseñaNueva" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ConfirmarContraseña" class="form-label"></label>
                            <input asp-for="ConfirmarContraseña" class="form-control bg-dark text-light" />
                            <span asp-validation-for="ConfirmarContraseña" class="text-danger"></span>
                        </div>

                        <div class="alert alert-info">
                            <p class="mb-0"><i class="bi bi-info-circle me-2"></i>Para mayor seguridad, su contraseña debe:</p>
                            <ul class="mb-0 mt-2">
                                <li>Tener al menos 6 caracteres</li>
                                <li>Contener letras y números</li>
                                <li>Incluir al menos un carácter especial</li>
                                <li>Ser diferente a su contraseña anterior</li>
                            </ul>
                        </div>

                        <div class="d-flex justify-content-end gap-2">
                            <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left me-1"></i> Cancelar
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-check2-circle me-1"></i> Cambiar Contraseña
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Validación en tiempo real de la fortaleza de la contraseña
        document.addEventListener('DOMContentLoaded', function() {
            const nuevaContraseña = document.getElementById('ContraseñaNueva');
            if (nuevaContraseña) {
                nuevaContraseña.addEventListener('input', function() {
                    const valor = this.value;
                    const elementos = document.querySelectorAll('.alert-info ul li');

                    // Verificar longitud mínima
                    if (elementos[0]) {
                        if (valor.length >= 6) {
                            elementos[0].classList.add('text-success');
                            elementos[0].classList.remove('text-light');
                        } else {
                            elementos[0].classList.remove('text-success');
                            elementos[0].classList.add('text-light');
                        }
                    }

                    // Verificar letras y números
                    if (elementos[1]) {
                        if (/[a-zA-Z]/.test(valor) && /[0-9]/.test(valor)) {
                            elementos[1].classList.add('text-success');
                            elementos[1].classList.remove('text-light');
                        } else {
                            elementos[1].classList.remove('text-success');
                            elementos[1].classList.add('text-light');
                        }
                    }

                    // Verificar caracteres especiales
                    if (elementos[2]) {
                        if (/[^a-zA-Z0-9]/.test(valor)) {
                            elementos[2].classList.add('text-success');
                            elementos[2].classList.remove('text-light');
                        } else {
                            elementos[2].classList.remove('text-success');
                            elementos[2].classList.add('text-light');
                        }
                    }
                });
            }
        });
    </script>
}