@model Javo2.ViewModels.Authentication.ResetearContraseñaViewModel
@{
    ViewData["Title"] = "Restablecer Contraseña";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card shadow-lg border-0 rounded-lg mt-5 bg-dark text-light">
            <div class="card-header">
                <h3 class="text-center font-weight-light my-4">Restablecer Contraseña</h3>
            </div>
            <div class="card-body">
                <p class="text-center text-muted mb-4">
                    Ingrese su nueva contraseña.
                </p>
                <form asp-action="ResetearContraseña" method="post">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                    <input type="hidden" asp-for="UsuarioID" />
                    <input type="hidden" asp-for="Token" />

                    <div class="form-floating mb-3">
                        <input asp-for="NuevaContraseña" class="form-control bg-secondary text-light" id="inputPassword" type="password" placeholder="Nueva contraseña" />
                        <label for="inputPassword" class="text-light">Nueva contraseña</label>
                        <span asp-validation-for="NuevaContraseña" class="text-danger"></span>
                    </div>

                    <div class="form-floating mb-3">
                        <input asp-for="ConfirmarContraseña" class="form-control bg-secondary text-light" id="inputConfirmPassword" type="password" placeholder="Confirmar nueva contraseña" />
                        <label for="inputConfirmPassword" class="text-light">Confirmar nueva contraseña</label>
                        <span asp-validation-for="ConfirmarContraseña" class="text-danger"></span>
                    </div>

                    <div class="d-grid gap-2 mt-4">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-lock me-1"></i> Restablecer Contraseña
                        </button>
                    </div>
                </form>
            </div>
            <div class="card-footer text-center py-3">
                <div class="small">
                    <a asp-controller="Auth" asp-action="Login" class="text-light">¿Recordó su contraseña? Inicie sesión</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Validación en tiempo real de la fortaleza de la contraseña
        document.addEventListener('DOMContentLoaded', function() {
            const nuevaContraseña = document.getElementById('inputPassword');
            if (nuevaContraseña) {
                nuevaContraseña.addEventListener('input', function() {
                    const valor = this.value;
                    const validaciones = {
                        longitud: valor.length >= 6,
                        letraNumero: /[a-zA-Z]/.test(valor) && /[0-9]/.test(valor),
                        caracterEspecial: /[^a-zA-Z0-9]/.test(valor)
                    };

                    // Verificar si ya existe el div de feedback
                    let feedbackDiv = document.getElementById('password-strength-feedback');
                    if (!feedbackDiv) {
                        feedbackDiv = document.createElement('div');
                        feedbackDiv.id = 'password-strength-feedback';
                        feedbackDiv.className = 'mt-2 small';
                        nuevaContraseña.parentNode.appendChild(feedbackDiv);
                    }

                    // Crear contenido de retroalimentación
                    let html = '<div class="fw-bold mb-1">Fortaleza de la contraseña:</div>';
                    html += '<ul class="mb-0 ps-3">';
                    html += `<li class="${validaciones.longitud ? 'text-success' : 'text-danger'}">Al menos 6 caracteres</li>`;
                    html += `<li class="${validaciones.letraNumero ? 'text-success' : 'text-danger'}">Letras y números</li>`;
                    html += `<li class="${validaciones.caracterEspecial ? 'text-success' : 'text-danger'}">Al menos un carácter especial</li>`;
                    html += '</ul>';

                    feedbackDiv.innerHTML = html;
                });
            }
        });
    </script>
}